/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import Controlador.RegistroControlador;
import Controlador.UI;
import com.formdev.flatlaf.ui.FlatTextBorder;
import java.awt.Color;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

/**
 *
 * @author USER
 */
public class RegistroVista extends javax.swing.JFrame {

    int txt_nom1_ph = 0;
    int txt_nom2_ph = 0;
    int txt_ape1_ph = 0;
    int txt_cedula_ph = 0;
    int txt_ape2_ph = 0;
    int txt_cor_ph = 0;
    int txt_usu_ph = 0;
    int txt_cla_ph = 0;
    int txt_cla_conf_ph = 0;
    private String clavePorDefecto = "e. g. Contraseña123";

    /**
     * Creates new form RegistroVista
     */
    public RegistroVista() {
        initComponents();
        
        this.setLocationRelativeTo(null);
        txt_cedula.requestFocusInWindow();
        txt_nombre1.setForeground(Color.gray);
        txt_nombre2.setForeground(Color.gray);
        txt_apellido1.setForeground(Color.gray);
        txt_apellido2.setForeground(Color.gray);
        txt_correo.setForeground(Color.gray);
        txt_cedula.setForeground(Color.gray);
        txt_usuario.setForeground(Color.gray);

        txt_clave1.setEchoChar((char) 0);
        txt_clave1.setForeground(Color.gray);
        txt_clave1.setText(clavePorDefecto);

        txt_clave_comprobacion.setEchoChar((char) 0);
        txt_clave_comprobacion.setForeground(Color.gray);
        txt_clave_comprobacion.setText(clavePorDefecto);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_nombres = new javax.swing.JLabel();
        txt_nombre1 = new javax.swing.JTextField();
        txt_nombre2 = new javax.swing.JTextField();
        lbl_apellidos = new javax.swing.JLabel();
        txt_apellido1 = new javax.swing.JTextField();
        txt_apellido2 = new javax.swing.JTextField();
        lbl_correo = new javax.swing.JLabel();
        txt_correo = new javax.swing.JTextField();
        lbl_usuario = new javax.swing.JLabel();
        txt_usuario = new javax.swing.JTextField();
        lbl_claveNueva = new javax.swing.JLabel();
        txt_clave1 = new javax.swing.JPasswordField();
        lbl_clave_comprobacion = new javax.swing.JLabel();
        txt_clave_comprobacion = new javax.swing.JPasswordField();
        btn_registro_Usuaio = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txt_cedula = new javax.swing.JTextField();
        btn_actualizar = new javax.swing.JButton();
        btn_lista_Usuarios = new javax.swing.JButton();
        lbl_titulo = new javax.swing.JLabel();
        btn_finalizar_seción = new javax.swing.JButton();
        lbl_contraseñaActual = new javax.swing.JLabel();
        txt_contraseña_actual = new javax.swing.JTextField();
        lbl_usuario1 = new javax.swing.JLabel();
        jcmbx_roles = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbl_nombres.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbl_nombres.setForeground(UI.SPACIAL_CADET);
        lbl_nombres.setText("Nombres");

        txt_nombre1.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        txt_nombre1.setForeground(UI.SPACIAL_CADET);
        txt_nombre1.setText("e. g. Juan");
        txt_nombre1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_nombre1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_nombre1FocusLost(evt);
            }
        });
        txt_nombre1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nombre1ActionPerformed(evt);
            }
        });
        txt_nombre1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_nombre1KeyPressed(evt);
            }
        });

        txt_nombre2.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        txt_nombre2.setForeground(UI.SPACIAL_CADET);
        txt_nombre2.setText("e. g. Luis\n");
        txt_nombre2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_nombre2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_nombre2FocusLost(evt);
            }
        });
        txt_nombre2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_nombre2KeyPressed(evt);
            }
        });

        lbl_apellidos.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbl_apellidos.setForeground(UI.SPACIAL_CADET);
        lbl_apellidos.setText("Apellidos");

        txt_apellido1.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        txt_apellido1.setForeground(UI.SPACIAL_CADET);
        txt_apellido1.setText("e. g. Rodrigez\n");
        txt_apellido1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_apellido1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_apellido1FocusLost(evt);
            }
        });
        txt_apellido1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_apellido1KeyPressed(evt);
            }
        });

        txt_apellido2.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        txt_apellido2.setForeground(UI.SPACIAL_CADET);
        txt_apellido2.setText("e. g. Carlosama");
        txt_apellido2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_apellido2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_apellido2FocusLost(evt);
            }
        });
        txt_apellido2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_apellido2ActionPerformed(evt);
            }
        });
        txt_apellido2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_apellido2KeyPressed(evt);
            }
        });

        lbl_correo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbl_correo.setForeground(UI.SPACIAL_CADET);
        lbl_correo.setText("Correo");

        txt_correo.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        txt_correo.setForeground(UI.SPACIAL_CADET);
        txt_correo.setText("example@gmail.com");
        txt_correo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_correoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_correoFocusLost(evt);
            }
        });
        txt_correo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_correoKeyPressed(evt);
            }
        });

        lbl_usuario.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbl_usuario.setForeground(UI.SPACIAL_CADET);
        lbl_usuario.setText("Usuario");

        txt_usuario.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        txt_usuario.setForeground(UI.SPACIAL_CADET);
        txt_usuario.setText("e. g. luis.rodri_12");
        txt_usuario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_usuarioFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_usuarioFocusLost(evt);
            }
        });
        txt_usuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_usuarioKeyPressed(evt);
            }
        });

        lbl_claveNueva.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbl_claveNueva.setForeground(UI.SPACIAL_CADET);
        lbl_claveNueva.setText("Nueva Contraseña");

        txt_clave1.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        txt_clave1.setForeground(UI.SPACIAL_CADET);
        txt_clave1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_clave1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_clave1FocusLost(evt);
            }
        });
        txt_clave1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_clave1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_clave1KeyTyped(evt);
            }
        });

        lbl_clave_comprobacion.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbl_clave_comprobacion.setForeground(UI.SPACIAL_CADET);
        lbl_clave_comprobacion.setText("Repita la contraseña ");

        txt_clave_comprobacion.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        txt_clave_comprobacion.setForeground(UI.SPACIAL_CADET);
        txt_clave_comprobacion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_clave_comprobacionFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_clave_comprobacionFocusLost(evt);
            }
        });
        txt_clave_comprobacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_clave_comprobacionKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_clave_comprobacionKeyTyped(evt);
            }
        });

        btn_registro_Usuaio.setBackground(UI.SPACIAL_CADET);
        btn_registro_Usuaio.setFont(new java.awt.Font("Leelawadee UI", 1, 18)); // NOI18N
        btn_registro_Usuaio.setForeground(UI.GHOST_WHITE);
        btn_registro_Usuaio.setText("REGISTRAR");
        btn_registro_Usuaio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_registro_UsuaioActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Cédula");

        txt_cedula.setText("e. g. 0102030405");
        txt_cedula.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txt_cedula.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_cedulaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_cedulaFocusLost(evt);
            }
        });
        txt_cedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_cedulaActionPerformed(evt);
            }
        });
        txt_cedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_cedulaKeyPressed(evt);
            }
        });

        btn_actualizar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btn_actualizar.setText("ACTUALIZAR");
        btn_actualizar.setOpaque(true);
        btn_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_actualizarActionPerformed(evt);
            }
        });

        btn_lista_Usuarios.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btn_lista_Usuarios.setText("VER USUARIOS");
        btn_lista_Usuarios.setOpaque(true);

        lbl_titulo.setFont(new java.awt.Font("Leelawadee UI", 1, 24)); // NOI18N
        lbl_titulo.setForeground(UI.SPACIAL_CADET);
        lbl_titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_titulo.setText("¡REGISTRA A UN NUEVO USUARIO!");

        btn_finalizar_seción.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_finalizar_seción.setText("CERRAR");
        btn_finalizar_seción.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_finalizar_seciónActionPerformed(evt);
            }
        });

        lbl_contraseñaActual.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbl_contraseñaActual.setForeground(UI.SPACIAL_CADET);
        lbl_contraseñaActual.setText("Contraseña Actual");

        txt_contraseña_actual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_contraseña_actualActionPerformed(evt);
            }
        });
        txt_contraseña_actual.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_contraseña_actualKeyPressed(evt);
            }
        });

        lbl_usuario1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbl_usuario1.setForeground(UI.SPACIAL_CADET);
        lbl_usuario1.setText("Rol");

        jcmbx_roles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcmbx_rolesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(221, 221, 221)
                        .addComponent(txt_nombre1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txt_nombre2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(221, 221, 221)
                        .addComponent(lbl_apellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_registro_Usuaio, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(btn_finalizar_seción, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(93, 93, 93)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_cedula, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)
                                    .addComponent(lbl_nombres, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_titulo)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(219, 219, 219)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_clave1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_correo, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txt_apellido1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txt_apellido2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txt_correo, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lbl_contraseñaActual)
                            .addComponent(txt_contraseña_actual)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_claveNueva)
                                .addGap(85, 85, 85)
                                .addComponent(lbl_clave_comprobacion))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_usuario1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jcmbx_roles, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(450, 450, 450)
                        .addComponent(txt_clave_comprobacion, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(199, 199, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(337, 337, 337)
                .addComponent(btn_actualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_lista_Usuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_titulo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_cedula, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn_finalizar_seción, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lbl_nombres, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_nombre1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_nombre2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_apellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_apellido1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_apellido2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(lbl_correo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_correo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_usuario1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jcmbx_roles)
                    .addComponent(txt_usuario, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_contraseñaActual, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_contraseña_actual, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_clave_comprobacion, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_claveNueva, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_clave1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_clave_comprobacion, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_lista_Usuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_actualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_registro_Usuaio, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_nombre1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_nombre1FocusGained
        if (txt_nom1_ph == 0) {
            txt_nombre1.setText("");
            txt_nom1_ph = 1;
        }

        txt_nombre1.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (!Character.isLetter(c)) {
                    e.consume(); // Ignora el carácter si no es una letra
                    return;
                } else {
                    txt_nombre1.setBorder(new FlatTextBorder());
                    txt_nombre1.setForeground(UI.SPACIAL_CADET);
                }

                // Limita la longitud del texto a 20 caracteres.
                String textoActual = txt_nombre1.getText();
                if (textoActual.length() >= 25) {
                    e.consume();
                }
            }
        });
    }//GEN-LAST:event_txt_nombre1FocusGained

    private void txt_nombre1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_nombre1FocusLost
        String textoDefecto = "e. g. Juan";
        String textoIngresado = txt_nombre1.getText();

        if (textoIngresado.trim().isEmpty() || textoIngresado.equals(textoDefecto)) {
            txt_nombre1.setForeground(Color.red); // Texto rojo
            txt_nombre1.setText(textoDefecto); // Restaurar texto por defecto
            txt_nombre1.setBorder(UI.getBorderError());
            txt_nom1_ph = 0;
        } else {
            txt_nombre1.setBorder(new FlatTextBorder());
            txt_nombre1.setForeground(UI.SPACIAL_CADET); // Texto negro (color original)
            txt_nom1_ph = 1;
        }
    }//GEN-LAST:event_txt_nombre1FocusLost

    private void txt_nombre1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nombre1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_nombre2.requestFocus();
        }
    }//GEN-LAST:event_txt_nombre1KeyPressed

    private void txt_nombre2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_nombre2FocusGained
        if (txt_nom2_ph == 0) {
            txt_nombre2.setText("");
            txt_nom2_ph = 1;
        }

        txt_nombre2.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (!Character.isLetter(c)) {
                    e.consume();
                    return;
                } else {
                    txt_nombre2.setBorder(new FlatTextBorder());
                    txt_nombre2.setForeground(UI.SPACIAL_CADET);
                }
                String textoActual = txt_nombre2.getText();
                if (textoActual.length() >= 25) {
                    e.consume();
                }
            }
        });
    }//GEN-LAST:event_txt_nombre2FocusGained

    private void txt_nombre2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_nombre2FocusLost
        String textoDefecto = "e. g. Luis ";
        String textoIngresado = txt_nombre2.getText();

        if (textoIngresado.trim().isEmpty() || textoIngresado.equals(textoDefecto)) {
            txt_nombre2.setForeground(Color.red); // Texto rojo
            txt_nombre2.setText(textoDefecto); // Restaurar texto por defecto
            txt_nombre2.setBorder(UI.getBorderError());
            txt_nom2_ph = 0;
        } else {
            txt_nombre2.setBorder(new FlatTextBorder());
            txt_nombre2.setForeground(UI.SPACIAL_CADET); // Texto negro (color original)
            txt_nom2_ph = 1;
        }
    }//GEN-LAST:event_txt_nombre2FocusLost

    private void txt_nombre2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nombre2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_apellido1.requestFocus();
        }
    }//GEN-LAST:event_txt_nombre2KeyPressed

    private void txt_apellido1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_apellido1FocusGained
        if (txt_ape1_ph == 0) {
            txt_apellido1.setText("");
            txt_ape1_ph = 1;
        }

        txt_apellido1.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (!Character.isLetter(c)) {
                    e.consume();
                    return;
                } else {
                    txt_apellido1.setBorder(new FlatTextBorder());
                    txt_apellido1.setForeground(UI.SPACIAL_CADET);
                }
                String textoActual = txt_apellido1.getText();
                if (textoActual.length() >= 25) {
                    e.consume();
                }
            }
        });
    }//GEN-LAST:event_txt_apellido1FocusGained

    private void txt_apellido1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_apellido1FocusLost
        String textoDefecto = "e. g. Rodrigez ";
        String textoIngresado = txt_apellido1.getText();

        if (textoIngresado.trim().isEmpty() || textoIngresado.equals(textoDefecto)) {
            txt_apellido1.setForeground(Color.red); // Texto rojo
            txt_apellido1.setText(textoDefecto); // Restaurar texto por defecto
            txt_apellido1.setBorder(UI.getBorderError());
            txt_ape1_ph = 0;
        } else {
            txt_apellido1.setBorder(new FlatTextBorder());
            txt_apellido1.setForeground(UI.SPACIAL_CADET); // Texto negro (color original)
            txt_ape1_ph = 1;
        }
    }//GEN-LAST:event_txt_apellido1FocusLost

    private void txt_apellido1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_apellido1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_apellido2.requestFocus();
        }
    }//GEN-LAST:event_txt_apellido1KeyPressed

    private void txt_apellido2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_apellido2FocusGained
        if (txt_ape2_ph == 0) {
            txt_apellido2.setText("");
            txt_ape2_ph = 1;
        }

        txt_apellido2.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (!Character.isLetter(c)) {
                    e.consume();
                    return;
                } else {
                    txt_apellido2.setBorder(new FlatTextBorder());
                    txt_apellido2.setForeground(UI.SPACIAL_CADET);
                }
                String textoActual = txt_apellido2.getText();
                if (textoActual.length() >= 25) {
                    e.consume();
                }
            }
        });
    }//GEN-LAST:event_txt_apellido2FocusGained

    private void txt_apellido2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_apellido2FocusLost
        String textoDefecto = "e. g. Carlosama";
        String textoIngresado = txt_apellido2.getText();

        if (textoIngresado.trim().isEmpty() || textoIngresado.equals(textoDefecto)) {
            txt_apellido2.setForeground(Color.red); // Texto rojo
            txt_apellido2.setText(textoDefecto); // Restaurar texto por defecto
            txt_apellido2.setBorder(UI.getBorderError());
            txt_ape2_ph = 0;
        } else {
            txt_apellido2.setBorder(new FlatTextBorder());
            txt_apellido2.setForeground(UI.SPACIAL_CADET); // Texto negro (color original)
            txt_ape2_ph = 1;
        }
    }//GEN-LAST:event_txt_apellido2FocusLost

    private void txt_apellido2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_apellido2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_correo.requestFocus();
        }
    }//GEN-LAST:event_txt_apellido2KeyPressed

    private void txt_correoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_correoFocusGained
        if (txt_cor_ph == 0) {
            txt_correo.setText("");
            txt_cor_ph = 1;
        }

        // Use a separate KeyAdapter instance to avoid duplicate listeners
        txt_correo.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();

                if (!Character.isLetterOrDigit(c) && c != '.' && c != '_' && c != '-' && c != '@') {
                    e.consume(); // Ignore the character if it's not allowed
                    return;
                } else {
                    txt_correo.setBorder(new FlatTextBorder());
                    txt_correo.setForeground(UI.SPACIAL_CADET);
                }

                String textoActual = txt_correo.getText();
                if (c == '@' && textoActual.contains("@")) {
                    e.consume(); // Ignore the character if an @ symbol already exists
                    return;
                }

                if (textoActual.length() >= 50) {
                    e.consume();
                }
            }
        });
    }//GEN-LAST:event_txt_correoFocusGained

    private void txt_correoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_correoFocusLost
        String textoDefecto = "example@gmail.com";
        String textoIngresado = txt_correo.getText();

        if (textoIngresado.trim().isEmpty() || textoIngresado.equals(textoDefecto)) {
            txt_correo.setForeground(Color.red);
            txt_correo.setText(textoDefecto); // Restaurar texto por defecto
            txt_correo.setBorder(UI.getBorderError());
            txt_cor_ph = 0;
        } else {
            txt_correo.setBorder(new FlatTextBorder());
            txt_correo.setForeground(UI.SPACIAL_CADET);
            txt_cor_ph = 1;
        }
    }//GEN-LAST:event_txt_correoFocusLost

    private void txt_correoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_correoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_usuario.requestFocus();
        }
    }//GEN-LAST:event_txt_correoKeyPressed

    private void txt_usuarioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_usuarioFocusGained
        if (txt_usu_ph == 0) {
            txt_usuario.setText("");
            txt_usuario.setForeground(UI.SPACIAL_CADET);
            txt_usu_ph = 1;
        }

        txt_usuario.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();

                //  Permitir letras, números, puntos y guiones bajos
                if (!Character.isLetterOrDigit(c) && c != '.' && c != '_' || Character.isUpperCase(c) || txt_usuario.getText().length() >= 20) {
                    e.consume();
                    return;
                } else {
                    txt_usuario.setBorder(new FlatTextBorder());
                    txt_usuario.setForeground(UI.SPACIAL_CADET);
                }

            }
        });
    }//GEN-LAST:event_txt_usuarioFocusGained

    private void txt_usuarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_usuarioFocusLost
        String textoDefecto = "e. g. luis.rodri_12";
        String textoIngresado = txt_usuario.getText();

        if (textoIngresado.trim().isEmpty() || textoIngresado.equals(textoDefecto)) {
            txt_usuario.setForeground(Color.red);
            txt_usuario.setText(textoDefecto);
            txt_usuario.setBorder(UI.getBorderError());
            txt_usu_ph = 0;
        } else {
            txt_usuario.setBorder(new FlatTextBorder());
            txt_usuario.setForeground(UI.SPACIAL_CADET);
            txt_usu_ph = 1;
        }
    }//GEN-LAST:event_txt_usuarioFocusLost

    private void txt_usuarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_usuarioKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_contraseña_actual.requestFocus();
        }
    }//GEN-LAST:event_txt_usuarioKeyPressed

    private void txt_clave1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_clave1FocusGained
        String claveActual = new String(txt_clave1.getPassword());

        if (txt_cla_ph == 0 || claveActual.equals(clavePorDefecto)) {
            txt_clave1.setText("");  // Borrar el texto
            txt_clave1.setEchoChar('*'); // Mostrar asteriscos
            txt_cla_ph = 1; // Cambiar la bandera
        }
    }//GEN-LAST:event_txt_clave1FocusGained

    private void txt_clave1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_clave1FocusLost
        char[] claveIngresadaArray = txt_clave1.getPassword();
        String claveIngresada = new String(claveIngresadaArray);

        if (claveIngresada.trim().isEmpty()) {
            txt_clave1.setBorder(UI.getBorderError());
            txt_clave1.setForeground(Color.RED);
            txt_clave1.setText(clavePorDefecto);
            txt_clave1.setEchoChar((char) 0);
            txt_cla_ph = 0; // Restablecer la bandera
        } else {
            txt_clave1.setBorder(new FlatTextBorder());
            txt_clave1.setForeground(UI.SPACIAL_CADET);
            txt_clave1.setEchoChar('*');
        }
    }//GEN-LAST:event_txt_clave1FocusLost

    private void txt_clave1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_clave1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_clave_comprobacion.requestFocus();
        }
    }//GEN-LAST:event_txt_clave1KeyPressed

    private void txt_clave1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_clave1KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();

        //  Permitir letras, números, puntos y guiones bajos
        if (!Character.isLetterOrDigit(c)
                && c != '.'
                && c != '_'
                && c != '#'
                && c != '-'
                && c != '@'
                || txt_clave1.getPassword().length >= 16) {
            evt.consume();
        } else {
            txt_clave1.setBorder(new FlatTextBorder());
            txt_clave1.setForeground(UI.SPACIAL_CADET);
        }
    }//GEN-LAST:event_txt_clave1KeyTyped

    private void txt_clave_comprobacionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_clave_comprobacionFocusGained
        String claveActual = new String(txt_clave_comprobacion.getPassword());

        if (txt_cla_conf_ph == 0 || claveActual.equals(clavePorDefecto)) {
            txt_clave_comprobacion.setText("");  // Borrar el texto
            txt_clave_comprobacion.setForeground(UI.SPACIAL_CADET);
            txt_clave_comprobacion.setEchoChar('*'); // Mostrar asteriscos
            txt_cla_conf_ph = 1; // Cambiar la bandera
        }

    }//GEN-LAST:event_txt_clave_comprobacionFocusGained

    private void txt_clave_comprobacionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_clave_comprobacionFocusLost
        char[] claveIngresadaArray = txt_clave_comprobacion.getPassword();
        String claveIngresada = new String(claveIngresadaArray);

        if (claveIngresada.trim().isEmpty()) {
            txt_clave_comprobacion.setBorder(UI.getBorderError());
            txt_clave_comprobacion.setForeground(Color.RED);
            txt_clave_comprobacion.setText(clavePorDefecto);
            txt_clave_comprobacion.setEchoChar((char) 0);
            txt_cla_conf_ph = 0; // Restablecer la bandera
        } else {
            txt_clave_comprobacion.setBorder(new FlatTextBorder());
            txt_clave_comprobacion.setEchoChar('*');
        }
    }//GEN-LAST:event_txt_clave_comprobacionFocusLost

    private void txt_clave_comprobacionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_clave_comprobacionKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btn_registro_Usuaio.requestFocus();
        }
    }//GEN-LAST:event_txt_clave_comprobacionKeyPressed

    private void txt_clave_comprobacionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_clave_comprobacionKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();

        //  Permitir letras, números, puntos y guiones bajos
        if (!Character.isLetterOrDigit(c)
                && c != '.'
                && c != '_'
                && c != '#'
                && c != '-'
                && c != '@'
                || txt_clave_comprobacion.getPassword().length >= 16) {
            evt.consume();
        } else {
            txt_clave_comprobacion.setBorder(new FlatTextBorder());
            txt_clave_comprobacion.setForeground(UI.SPACIAL_CADET);
        }
    }//GEN-LAST:event_txt_clave_comprobacionKeyTyped

    private void btn_registro_UsuaioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_registro_UsuaioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_registro_UsuaioActionPerformed

    private void txt_nombre1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nombre1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nombre1ActionPerformed


    private void txt_cedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_cedulaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_cedulaActionPerformed

    private void txt_cedulaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cedulaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_nombre1.requestFocus();
            evt.consume(); // Evita que otros eventos interfieran
        }
    }//GEN-LAST:event_txt_cedulaKeyPressed

    private void txt_cedulaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_cedulaFocusGained
        // Si aún se muestra el placeholder, limpiar el campo y marcar la bandera
        if (txt_cedula_ph == 0) {
            txt_cedula.setText("");
            txt_cedula_ph = 1;
        }
        // Se restablece el estilo normal (sin modificar el KeyListener, ya agregado)
        txt_cedula.setBorder(new FlatTextBorder());
        txt_cedula.setForeground(UI.SPACIAL_CADET);
    }//GEN-LAST:event_txt_cedulaFocusGained

    private void txt_cedulaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_cedulaFocusLost
        // TODO add your handling code here:
        String textoDefecto = "e. g. 0102030405";
        String textoIngresado = txt_cedula.getText();
        if (textoIngresado.trim().isEmpty() || textoIngresado.equals(textoDefecto)) {
            txt_cedula.setForeground(Color.red); // Texto en rojo para indicar error
            txt_cedula.setText(textoDefecto);       // Restaurar el placeholder
            txt_cedula.setBorder(UI.getBorderError());
            txt_cedula_ph = 0;
        } else {
            txt_cedula.setBorder(new FlatTextBorder());
            txt_cedula.setForeground(UI.SPACIAL_CADET);
            txt_cedula_ph = 1;
        }
    }//GEN-LAST:event_txt_cedulaFocusLost

    private void txt_apellido2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_apellido2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_apellido2ActionPerformed

    private void btn_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_actualizarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_actualizarActionPerformed

    private void btn_finalizar_seciónActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_finalizar_seciónActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_finalizar_seciónActionPerformed

    private void txt_contraseña_actualKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_contraseña_actualKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_clave1.requestFocus();
        }
    }//GEN-LAST:event_txt_contraseña_actualKeyPressed

    private void txt_contraseña_actualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_contraseña_actualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_contraseña_actualActionPerformed

    private void jcmbx_rolesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcmbx_rolesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcmbx_rolesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Vista.RegistroVista registroVista = new Vista.RegistroVista();

                // Crear instancia del controlador pasando un usuario de ejemplo (o null si es un nuevo registro)
                RegistroControlador registroControlador = new RegistroControlador("usuarioEjemplo", registroVista);

                // Iniciar la vista
                registroControlador.iniciarVista();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btn_actualizar;
    public javax.swing.JButton btn_finalizar_seción;
    private javax.swing.JButton btn_lista_Usuarios;
    public javax.swing.JButton btn_registro_Usuaio;
    private javax.swing.JLabel jLabel1;
    public javax.swing.JComboBox<String> jcmbx_roles;
    private javax.swing.JLabel lbl_apellidos;
    private javax.swing.JLabel lbl_claveNueva;
    private javax.swing.JLabel lbl_clave_comprobacion;
    private javax.swing.JLabel lbl_contraseñaActual;
    private javax.swing.JLabel lbl_correo;
    private javax.swing.JLabel lbl_nombres;
    private javax.swing.JLabel lbl_titulo;
    private javax.swing.JLabel lbl_usuario;
    private javax.swing.JLabel lbl_usuario1;
    public javax.swing.JTextField txt_apellido1;
    public javax.swing.JTextField txt_apellido2;
    public javax.swing.JTextField txt_cedula;
    public javax.swing.JPasswordField txt_clave1;
    public javax.swing.JPasswordField txt_clave_comprobacion;
    public javax.swing.JTextField txt_contraseña_actual;
    public javax.swing.JTextField txt_correo;
    public javax.swing.JTextField txt_nombre1;
    public javax.swing.JTextField txt_nombre2;
    public javax.swing.JTextField txt_usuario;
    // End of variables declaration//GEN-END:variables
}
